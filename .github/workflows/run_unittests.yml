name: Run Tests

on: [pull_request]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        sudo apt-get update
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install pytest

      - name: Run tests
        id: run-tests
        run: |
          pytest test/ --junitxml=test-results.xml

      - name: Check test results
        id: check-results
        run: |
          if grep -q 'errors="0"' test-results.xml && grep -q 'failures="0"' test-results.xml; then
            echo "All tests passed!" > test-result.txt
            echo "all-clear" >> $GITHUB_ENV
          else
            echo "Some tests failed!" > test-result.txt
            echo "tests-failed" >> $GITHUB_ENV
          fi

      - name: Post result comment
        uses: peter-evans/create-or-update-comment@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ${{ steps.run-tests.outputs.comment }}
          body: |
            $(cat test-result.txt)
            ```html
            $(cat test-results.xml)
            ```
          if: steps.check-results.outputs.result == 'all-clear'
        
      - name: Post result comment (failure)
        uses: peter-evans/create-or-update-comment@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Unittests failed!
            ```html
            $(cat test-results.xml)
            ```
          if: steps.check-results.outputs.result != 'all-clear'